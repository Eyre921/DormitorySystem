请根据这个数据库表，cpp实现user和usermanager类，
涉及与数据库的交互，你需要写出函数名即可，并以注释的方式写上相应的sql语句即可
CREATE TABLE users
(
    userID      TEXT PRIMARY KEY,  -- 用户ID（学号或用户名）
    name        TEXT NOT NULL,     -- 姓名
    gender      TEXT NOT NULL,     -- 性别
    password    TEXT NOT NULL,     -- 密码
    contactInfo TEXT,              -- 联系方式
    isCheckedIn INTEGER DEFAULT 0, -- 是否入住（0表示没有，1表示有）
    isAdmin     INTEGER DEFAULT 0  -- 是否为管理员（0表示学生，1表示管理员）
);
登录逻辑如下
 while (true)
    {
        cout << "\n---- 主菜单 ----\n";
        cout << "1. 学生登录\n";
        cout << "2. 管理员登录\n";
        cout << "3. 退出\n";
        cout << "请输入你的选择: ";
        cin >> choice;

        switch (choice)
        {
            case 1:
                studentLoginMenu(); // 学生登录
                break;
            case 2:
                adminLogin(); // 管理员登录
                break;
            case 3:
                cout << "退出程序...\n";
                return 0;
            default:
                cout << "无效选择，请重新输入。\n";
        }
    }
}

void studentLoginMenu()
{
    int choice;
    cout << "\n---- 学生菜单 ----\n";
    cout << "1. 学生登录\n";
    cout << "2. 学生注册\n";
    cout << "请输入你的选择: ";
    cin >> choice;

    switch (choice)
    {
        case 1:
            studentLogin(); // 学生登录
            break;
        case 2:
            studentRegister(); // 学生注册
            break;
        default:
            cout << "无效选择，请重新输入。\n";
            break;
    }
}

void studentLogin()
{
    string studentID, password;
    cout << "\n---- 学生登录 ----\n";
    cout << "请输入学号: ";
    cin >> studentID;
    cout << "请输入密码: ";
    cin >> password;

    // if (userManager.loginUser(studentID, password))
    // {
    cout << "学生登录成功！\n"; // 假设登录成功
    // 这里跳转到学生菜单
    studentMenu();
    // } else
    // {
    //     cout << "登录失败，学号或密码错误！\n";
    // }
}

// 管理员登录功能
void adminLogin()
{
    string adminID, password;
    cout << "\n---- 管理员登录 ----\n";
    cout << "请输入管理员ID: ";
    cin >> adminID;
    cout << "请输入密码: ";
    cin >> password;

    // 在这里你可以根据管理员ID和密码验证管理员身份
    // 例如，调用 userManager.loginUser(adminID, password) 检查是否为管理员
    cout << "管理员登录成功！\n"; // 假设登录成功
    // 这里跳转到管理员菜单
    adminMenu();
}

void studentRegister()
{
    string studentID, password, name, gender, contactInfo;
    cout << "\n---- 学生注册 ----\n";
    cout << "请输入学号: ";
    cin >> studentID;
    cout << "请输入密码: ";
    cin >> password;
    cout << "请输入姓名: ";
    cin >> name;
    cout << "请输入性别: ";
    cin >> gender;
    cout << "请输入联系方式: ";
    cin >> contactInfo;

    cout << studentID << password << name << gender << contactInfo << endl;
    // if (userManager.registerUser(studentID, password, name, gender, contactInfo)) {
    //     cout << "学生注册成功！\n";  // 假设注册成功
    //     // 这里跳转到学生菜单
    //     // studentLoginMenu();
    // } else {
    //     cout << "注册失败，可能是学号已存在。\n";
    // }
}

